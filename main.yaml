AWSTemplateFormatVersion: '2010-09-09'
Description: 'Main CloudFormation template for Cognito Authentication Demo'

Parameters:
  Environment:
    Type: String
    Default: "dev"
    AllowedValues: 
      - "dev"
      - "staging"
      - "prod"
    Description: The environment this template is being deployed to

  UserPoolName:
    Type: String
    Description: Name of the Cognito User Pool
    Default: "CognitoAuthDemo-UserPool"
    
  DomainName:
    Type: String
    Description: Domain name for the application (e.g., example.com)
    Default: ""

Conditions:
  HasDomainName: !Not [!Equals [!Ref DomainName, ""]]

Resources:
  # Core resources that are always created
  CognitoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://login-service-cf.s3.amazonaws.com/cognito.yaml
      Parameters:
        Environment: !Ref Environment
        UserPoolName: !Ref UserPoolName
        CallbackUrls: !Join 
          - ','
          - !If
            - HasDomainName
            - - !Sub 'https://app.${DomainName}/callback'
              - !Sub 'https://api.${DomainName}/api/auth/callback'
              - 'http://localhost:3000/callback'
              - 'http://localhost:3001/api/auth/callback'
            - - 'http://localhost:3000/callback'
              - 'http://localhost:3001/api/auth/callback'
        LogoutUrls: !Join 
          - ','
          - !If
            - HasDomainName
            - - !Sub 'https://app.${DomainName}'
              - !Sub 'https://api.${DomainName}'
              - 'http://localhost:3000'
              - 'http://localhost:3001'
            - - 'http://localhost:3000'
              - 'http://localhost:3001'

  IamStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CognitoStack
    Properties:
      TemplateURL: https://login-service-cf.s3.amazonaws.com/iam.yaml
      Parameters:
        Environment: !Ref Environment
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId

  # Core parameters needed for local dev
  DevParamsStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CognitoStack
    Properties:
      TemplateURL: https://login-service-cf.s3.amazonaws.com/params-core.yaml
      Parameters:
        Environment: !Ref Environment
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        UserPoolClientId: !GetAtt CognitoStack.Outputs.UserPoolClientId
        UserPoolClientSecret: '{{resolve:secretsmanager:CognitoUserPoolClientSecret:SecretString}}'

  # Hosting infrastructure - conditional on having a domain
  HostingStack:
    Type: AWS::CloudFormation::Stack
    Condition: HasDomainName
    DependsOn: 
      - CognitoStack
      - IamStack
      - DevParamsStack
    Properties:
      TemplateURL: https://login-service-cf.s3.amazonaws.com/hosting.yaml
      Parameters:
        Environment: !Ref Environment
        DomainName: !Ref DomainName
        UserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        UserPoolClientId: !GetAtt CognitoStack.Outputs.UserPoolClientId

Outputs:
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: !GetAtt CognitoStack.Outputs.UserPoolId

  UserPoolClientId:
    Description: ID of the Cognito User Pool Client
    Value: !GetAtt CognitoStack.Outputs.UserPoolClientId

  UserPoolDomainName:
    Description: Domain name of the Cognito User Pool
    Value: !GetAtt CognitoStack.Outputs.UserPoolDomainName

  ApplicationRoleArn:
    Description: ARN of the Application IAM Role
    Value: !GetAtt IamStack.Outputs.ApplicationRoleArn

  # Conditional outputs for when hosting is deployed
  ReactAppUrl:
    Description: URL of the React application
    Value: !If 
      - HasDomainName
      - !GetAtt HostingStack.Outputs.ReactAppUrl
      - "http://localhost:3000"
    
  NextJsApiUrl:
    Description: URL of the Next.js API
    Value: !If 
      - HasDomainName
      - !GetAtt HostingStack.Outputs.NextJsApiUrl
      - "http://localhost:3001"